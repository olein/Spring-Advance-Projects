package com.jonak.entity;
// Generated Jun 9, 2017 8:23:41 PM by Hibernate Tools 4.3.1

import java.util.Date;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Contact generated by hbm2java
 */
@Entity
@Table(name = "contact", catalog = "home_master", uniqueConstraints = @UniqueConstraint(columnNames = "address_id")
)
@SuppressWarnings("IdDefinedInHierarchy")
public class Contact implements java.io.Serializable {

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    private Integer id;

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
    @JoinColumn(name = "address_id", unique = true, nullable = false)
    private Address address;

    @Column(name = "name", nullable = false, length = 100)
    private String name;

    @Column(name = "mobile", nullable = false, length = 15)
    private String mobile;

    @Temporal(TemporalType.DATE)
    @Column(name = "birthday", nullable = false, length = 10)
    private Date birthday;

    @Column(name = "is_fnf", nullable = false)
    private boolean isFnf;

    @Column(name = "email", nullable = false, length = 100)
    private String email;

    @Column(name = "type_of_contact", nullable = false, length = 20)
    private String typeOfContact;

    @Column(name = "description", nullable = false, length = 200)
    private String description;

    public Contact() {       
    }

    public Contact(Address address, String name, String mobile, Date birthday, boolean isFnf, String email, String typeOfContact, String description) {
        this.address = address;
        this.name = name;
        this.mobile = mobile;
        this.birthday = birthday;
        this.isFnf = isFnf;
        this.email = email;
        this.typeOfContact = typeOfContact;
        this.description = description;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

//    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
//    @JoinColumn(name = "address_id", unique = true, nullable = false)
    public Address getAddress() {
        return this.address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getMobile() {
        return this.mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
    }

    public Date getBirthday() {
        return this.birthday;
    }

    public void setBirthday(Date birthday) {
        this.birthday = birthday;
    }

    public boolean isIsFnf() {
        return this.isFnf;
    }

    public void setIsFnf(boolean isFnf) {
        this.isFnf = isFnf;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getTypeOfContact() {
        return this.typeOfContact;
    }

    public void setTypeOfContact(String typeOfContact) {
        this.typeOfContact = typeOfContact;
    }

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

}
